name: Dynamic Environment Variables
on: [push]

env:
  WF_LEVEL_ENV: Available to all jobs

jobs:
  env-vars-and-context:
    env:
      JOB_LEVEL_ENV: Available to all steps in this jobs
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    # if $GITHUB_REF == 'refs/heads/main'  DON'T DO THIS
    steps:
      - name: Multiline ENV Var
        run:
          #DELIMITER=1234 ## This value must unique in the workflow  this command $(dd if=/dev/urandom bs=15 count=1 status=none | base64) help us generate a unique value 
          DELIMITER=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "RAMDOM_JOKE <<$DELIMITER" >> "$GITHUB_ENV"
          echo "Here is a joke:" >> "$GITHUB_ENV"
          curl -s https://icanhazdadjoke.com >> "$GITHUB_ENV"
          echo "" >> "$GITHUB_ENV"
          echo "$DELIMITER" >> "$GITHUB_ENV"
      - name: Set Env Var
        run: | 
          echo "NEW_ENV_VAR=$(date)" >> "$GITHUB_ENV" 
            # GITHUB_ENV is pre-defined variable containing the path to temporary file accessible to all steps, jobs is the workflow
          echo "JOB_LEVEL_ENV=$RANDOM" >> "$GITHUB_ENV" 
      - name: Log Custom ENV Vars
        env:
          STEP_LEVEL_ENV: Available to only this step
          WF_LEVEL_ENV: Overriden in step
        run: |
          echo '${{ env.STEP_LEVEL_ENV }}'
          echo $STEP_LEVEL_ENV
          echo $WF_LEVEL_ENV
          echo $JOB_LEVEL_ENV
          echo $NEW_ENV_VAR
          echo $RANDOM_JOKE
